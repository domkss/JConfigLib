plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.jreleaser' version '1.17.0'
    id 'maven-publish'
}

group = 'dev.domkss'
version = '1.1.3'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testAnnotationProcessor sourceSets.main.output

    //Yaml processor for writing reading config files
    implementation 'org.yaml:snakeyaml:2.0'
    shadow 'org.yaml:snakeyaml:2.0'
}

java {
    withJavadocJar()
    withSourcesJar()
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    archiveClassifier.set('')
}

tasks.named('build') {
    dependsOn tasks.named('shadowJar')
}

jar.enabled = false

test {
    useJUnitPlatform()
    afterTest { desc, result ->
        println "Test: ${desc.name} [${result.resultType}]"
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "RESULT: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, ${result.successfulTestCount} succeeded, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped"
        }
    }
}

publishing {
publications {
    maven(MavenPublication) {
        artifact(tasks.named("shadowJar"))
        artifact(tasks.named("sourcesJar"))
        artifact(tasks.named("javadocJar"))

        groupId = project.group.toString()
        artifactId = 'jconfiglib'
        version = project.version.toString()
        pom {
            packaging = "jar"
            properties['java.version'] = '17'

            name.set('JConfigLib')
            description.set('A Java library that syncs YAML config files with a Config class â€” auto-generates or updates as needed.')
            url.set("https://github.com/domkss/JConfigLib")

            licenses {
                license {
                    name.set("Mozilla Public License Version 2.0")
                    url.set("https://www.mozilla.org/en-US/MPL/2.0/")
                }
            }

            developers {
                developer {
                    id.set("domkss")
                    name.set("Dominik Kiss")
                    email.set("dominik@domkss.dev")
                }
            }

            scm {
                connection.set("scm:git:git://github.com/domkss/JConfigLib.git")
                developerConnection.set("scm:git:ssh://github.com:domkss/JConfigLib.git")
                url.set("https://github.com/domkss/JConfigLib")
            }

        }
    }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

jreleaser {
    release {
        github {
            repoOwner = 'domkss'
            overwrite = true
        }
    }
    signing {
        active = 'ALWAYS'
        armored = true
    }
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('build/staging-deploy')
                    retryDelay = 20
                }
            }
        }
    }
}